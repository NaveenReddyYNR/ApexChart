import React, { useState, useRef, useEffect } from "react";
import Chart from "react-apexcharts";
import { ApexOptions } from "apexcharts";

interface Data {
  labels: string[];
  series: {
    name: string;
    data: number[];
  }[];
}

const data: Data = {
  // Sample data for the graph
  labels: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ],
  series: [
    {
      name: "Series 1",
      data: [30, 40, 45, 50, 49, 60, 70, 91, 125, 85, 90, 95],
    },
  ],
};

const ApexSplouseChart: React.FC = () => {
  const [range, setRange] = useState<string>("3m");
  const containerRef = useRef<HTMLDivElement>(null);

  const handleRangeChange = (selectedRange: string) => {
    setRange(selectedRange);
  };

  const filterData = (): Data => {
    const { labels, series } = data;
    const currentDate = new Date();
    const currentMonth = currentDate.getMonth();

    switch (range) {
      case "1m":
        return {
          labels: labels.slice(currentMonth - 1, currentMonth + 1),
          series: series.map((s) => ({
            name: s.name,
            data: s.data.slice(currentMonth - 1, currentMonth + 1),
          })),
        };
      case "3m":
        return {
          labels: labels.slice(currentMonth - 3, currentMonth + 1),
          series: series.map((s) => ({
            name: s.name,
            data: s.data.slice(currentMonth - 3, currentMonth + 1),
          })),
        };
      case "6m":
        return {
          labels: labels.slice(currentMonth - 6, currentMonth + 1),
          series: series.map((s) => ({
            name: s.name,
            data: s.data.slice(currentMonth - 6, currentMonth + 1),
          })),
        };
      default:
        return data;
    }
  };

  const filteredData: Data = filterData();

  const chartOptions: ApexOptions = {
    chart: {
      stacked: false,
      toolbar: {
        show: false,
      },
    },
    stroke: {
      width: 6,
      colors: ["#FFA500"], // Set the line color to orange
      curve: "smooth", // Make the lines curvy
    },
    xaxis: {
      axisBorder: {
        show: false, // Hide X-axis line
      },
      axisTicks: {
        show: false, // Hide X-axis tick lines
      },
      labels: {
        style: {
          colors: "#ffffff", // Set X-axis text color to white
        },
      },
      categories: filteredData.labels, // Set the month names as categories
    },
    yaxis: {
      opposite: true, // Display Y-axis on the right side
      labels: {
        style: {
          colors: "#ffffff", // Set Y-axis text color to white
        },
      },
    },
    grid: {
      show: false,
    },
  };

  useEffect(() => {
    const containerElement = containerRef.current;
    if (containerElement) {
      const chartElement = containerElement.querySelector(
        ".apexcharts-canvas"
      ) as HTMLElement;
      if (chartElement) {
        containerElement.scrollLeft =
          chartElement.offsetWidth - containerElement.offsetWidth;
      }
    }
  }, [filteredData.series, filteredData.labels, range]);

  return (
    <>
      <div className="mb-4 flex items-center justify-end">
        <div
          className={`mr-2 px-2 py-1 rounded text-xs ${
            range === "1m"
              ? "text-white-A700 rounded-md bg-gradient7 cursor-pointer"
              : " text-slate-400 cursor-pointer"
          }`}
          onClick={() => handleRangeChange("1m")}
        >
          1 Month
        </div>
        <div
          // className={`mr-2 px-2 py-1 rounded text-xs ${
          //   range === "3m"
          //     ? "text-white-A700 rounded-md bg-gradient-to-b from-yellow-300 to-red-500 cursor-pointer"
          //     : " text-slate-400 cursor-pointer"
          // }`}
          className={`mr-2 px-2 py-1 rounded text-xs ${
            range === "3m"
              ? "text-white-A700 rounded-md bg-gradient7 cursor-pointer"
              : " text-slate-400 cursor-pointer"
          }`}
          onClick={() => handleRangeChange("3m")}
        >
          3 Months
        </div>
        <div
          className={`mr-2 px-2 py-1 rounded text-xs ${
            range === "6m"
              ? "text-white-A700 rounded-md bg-gradient7 cursor-pointer"
              : " text-slate-400 cursor-pointer"
          }`}
          onClick={() => handleRangeChange("6m")}
        >
          6 Months
        </div>
        <div
          className={`mr-2 px-2 py-1 rounded text-xs ${
            range === "all"
              ? "text-white-A700 rounded-md bg-gradient7 cursor-pointer"
              : " text-slate-400 cursor-pointer"
          }`}
          onClick={() => handleRangeChange("all")}
        >
          All
        </div>
      </div>
      <div className="text-right font-barlow text-base font-bold px-3 leading-tight text-[#FCAF59]">
        PRICE FLOOR
      </div>
      <div ref={containerRef} className="container mx-auto p-3 overflow-x-auto">
        <Chart
          options={chartOptions}
          series={filteredData.series}
          labels={filteredData.labels}
          type="line"
          height={300}
          width={range === "all" ? 830 : undefined}
        />
      </div>
    </>
  );
};

export default ApexSplouseChart;
